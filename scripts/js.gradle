/*
 * Copyright 2018, TeamDev Ltd. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

apply from: "$rootDir/scripts/js-cli.gradle"

ext.JAVA_SCRIPT_TASK_GROUP = 'JavaScript'
ext.npmPublicationRoot = "$buildDir/npm-publication/"

/**
 * Installs the module dependencies using the `npm install` command.
 */
task installDependencies {
    group = JAVA_SCRIPT_TASK_GROUP
    description = 'Installs the JavaScript dependencies.'

    inputs.files "$projectDir/package.json"
    outputs.files "$projectDir/node_modules"

    doLast {
        npm 'install'
    }
}

/**
 * Assembles the JS sources.
 *
 * This task is an analog of `build` for JS.
 *
 * To include a task into the JS build, depend `buildJs` onto that task.
 */
task buildJs {
    group = JAVA_SCRIPT_TASK_GROUP
    description = "Assembles the JavaScript source files."

    dependsOn installDependencies
}

/**
 * Copies the `package.json` file into the NPM publication directory.
 *
 * The original file declares a `private` (non-publishable) package. The resulting file declares
 * a publishable package.
 */
task copyPackageDescriptor(type: Copy) {
    group = JAVA_SCRIPT_TASK_GROUP

    from "$projectDir/package.json"
    into npmPublicationRoot

    filter { final line ->
        if (line.matches('.*private.*')) {
            return null
        } else if (line.contains('$VERSION')) {
            return line.replaceAll('\\$VERSION', spineVersion)
        } else {
            return line
        }
    }
}

/**
 * Copies the library protobuf dependencies into the NPM publication directory.
 */
task copyProtobuf(type: Copy) {
    group = JAVA_SCRIPT_TASK_GROUP

    exclude "test"

    from fileTree("$projectDir/proto")
    into npmPublicationRoot

    dependsOn buildJs
}

/**
 * Copies the library sources into the NPM publication directory.
 */
task copySources(type: Copy) {
    group = JAVA_SCRIPT_TASK_GROUP

    from fileTree("$projectDir/src")
    into npmPublicationRoot
}

/**
 * Copies the NPM publication files into a temporary directory which they are published from.
 */
task prepareJsPublication {
    group = JAVA_SCRIPT_TASK_GROUP
    description = 'Prepares the NPM package for publish.'

    dependsOn copyPackageDescriptor, copyProtobuf, copySources
}

/**
 * Publishes the NPM package locally with `npm link`.
 */
task link {
    group = JAVA_SCRIPT_TASK_GROUP
    description = "Publishes the NPM packge locally."

    dependsOn prepareJsPublication

    doLast {
        project.ext.npm npmPublicationRoot as File, 'link'
    }
}

/**
 * Publishes the NPM package with `npm publish`.
 */
task publishJs {
    group = JAVA_SCRIPT_TASK_GROUP
    description = 'Publishes the NPM package.'

    doLast {
        project.ext.npm npmPublicationRoot as File, 'publish'
    }

    dependsOn prepareJsPublication
}

build.dependsOn buildJs
publish.dependsOn publishJs

protobuf {
    generatedFilesBaseDir = "$projectDir/proto"
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    generateProtoTasks {
        all().each { final task ->
            task.builtins {
                // Do not use java builtin output in this project.
                remove java

                // For information on JavaScript code generation please see
                // https://github.com/google/protobuf/blob/master/js/README.md
                js {
                    option "import_style=commonjs"
                }
            }
            buildJs.dependsOn task
        }
    }
}
